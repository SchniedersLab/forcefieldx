<?xml version="1.0" encoding="UTF-8"?>
<!--
//******************************************************************************
//
// Title:       Force Field X.
// Description: Force Field X - Software for Molecular Biophysics.
// Copyright:   Copyright (c) Michael J. Schnieders 2001-2020.
//
// This file is part of Force Field X.
//
// Force Field X is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License version 3 as published by
// the Free Software Foundation.
//
// Force Field X is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
// details.
//
// You should have received a copy of the GNU General Public License along with
// Force Field X; if not, write to the Free Software Foundation, Inc., 59 Temple
// Place, Suite 330, Boston, MA 02111-1307 USA
//
// Linking this library statically or dynamically with other modules is making a
// combined work based on this library. Thus, the terms and conditions of the
// GNU General Public License cover the whole combination.
//
// As a special exception, the copyright holders of this library give you
// permission to link this library with independent modules to produce an
// executable, regardless of the license terms of these independent modules, and
// to copy and distribute the resulting executable under terms of your choice,
// provided that you also meet, for each linked independent module, the terms
// and conditions of the license of that module. An independent module is a
// module which is not derived from or based on this library. If you modify this
// library, you may extend this exception to your version of the library, but
// you are not obligated to do so. If you do not wish to do so, delete this
// exception statement from your version.
//
//******************************************************************************
-->
<!DOCTYPE TinkerCommands>
<TinkerCommands>
    <properties>
        <author email="michael-schnieders@uiowa.edu" />
        <title>Tinker Commands</title>
        <meta name="Tinker Commands" />
    </properties>
    <Command
        name="Alchemy"
        fileType="ARC"
        action="SHOWLOG"
        description="A simple program to perform very basic free energy perturbation calculations. This program
 is provided mostly for demonstration purposes. For example, we use ALCHEMY in a
 molecular modeling course laboratory exercise to perform such classic mutations as chloride
 to bromide and ethane to methanol in water. The present version uses the perturbation
 formula and windowing with an explicit mapping of atoms involved in the mutation
 (‘‘AMBER’’-style), instead of thermodynamic integration and independent freely propagating
 groups of mutated atoms (‘‘CHARMM’’-style). Some of the code specific to this program is
 limited to the AMBER and OPLS potential functional forms, but could be easily generalized
 to handle other potentials. A more general and sophisticated version is currently under
 development."
    >
        <Option
            name="Files"
            description="Numbers of the First and Last File to Analyze"
            gui="TEXTFIELD"
            default="1 100"
        />
        <Option
            name="Lambda"
            description="Lambda Increment for Free Energy Perturbation"
            gui="TEXTFIELD"
            default="0.5"
        />
        <Option
            name="Temperature"
            description="System Temperature (K)"
            gui="TEXTFIELD"
            default="300"
        />
        <Option
            name="Blocks"
            description="Number of Blocks for Sub-Averages"
            gui="TEXTFIELD"
            default="1"
        />
        <Option
            name="Intermolecular"
            description="Consider only Intermolecular Perturbation Energy"
            gui="RADIOBUTTONS"
            default="N"
        >
            <Value name="Y" />
            <Value name="N" />
        </Option>
    </Command>
    <Command
        name="Analyze"
        fileType="XYZ ARC"
        action="SHOWLOG"
        description="Provides information about a specific molecular structure. The program will ask for the name
 of a structure file, which must be in the TINKER .xyz file format, and the type of analysis
 desired. Options allow output of: (1) total potential energy of the system, (2) breakdown of
 the energy by potential function type or over individual atoms, (3) computation of the total
 dipole moment and its components, moments of inertia and radius of gyration, (4) listing of
 the parameters used to compute selected interaction energies, (5) energies associated with
 specified individual interactions."
    >
        <Option
            name="Analysis Options"
            description=" The TINKER Analysis Facility can Provide :&#10;
&#10;
 Total Potential Energy and its Components [E]&#10;
 Energy Breakdown over each of the Atoms [A]&#10;
 List of the Large Individual Interactions [L]&#10;
 Details for All Individual Interactions [D]&#10;
 Electrostatic, Inertial and Virial Properties [M]&#10;
 Force Field Parameters for Interactions [P]&#10;
 Connectivity Lists for Each of the Atoms [C]&#10;
&#10;
 Choose All Desired Analysis Types"
            gui="CHECKBOXES"
            default="E"
        >
            <Value name="E" />
            <Value name="A" />
            <Value name="L" />
            <Value name="D" />
            <Value name="M" />
            <Value name="P" />
            <Value name="C" />
            <Conditional
                name="Value"
                value="A"
                description="List Atoms for which Output is Desired [blank for all atoms]"
                gui="TERMINATEDTEXTFIELD"
            />
        </Option>
    </Command>
    <Command
        name="Anneal"
        fileType="XYZ"
        action="CONNECT"
        description="Performs a molecular dynamics simulated annealing computation. The program starts from
 a specified input molecular structure in TINKER .xyz format. The trajectory is updated
 using either a modified Beeman or a velocity Verlet integration method. The annealing
 protocol is implemented by allowing smooth changes between starting and final values of the
 system temperature via the Groningen method of coupling to an external bath. The scaling
 can be linear or sigmoidal in nature. In addition, parameters such as cutoff distance can be
 transformed along with the temperature. The user must input the desired number of
 dynamics steps for both the equilibration and cooling phases, a time interval for the
 dynamics steps, and an interval between coordinate/trajectory saves. All saved coordinate
 sets along the trajectory are placed in sequentially numbered cycle files."
    >
        <Option
            name="Temperature"
            description="Initial and Final Temperatures in Degrees Kelvin"
            gui="TEXTFIELD"
            default="1000, 0"
        />
        <Option
            name="Steps"
            description="Number of Equilibration Steps"
            gui="TEXTFIELD"
            default="0"
        />
        <Option
            name="Cooling"
            description="Number of Cooling Protocol Steps"
            gui="TEXTFIELD"
            default="2000"
        />
        <Option
            name="Protocol"
            description="Use Linear, Sigmoidal or Exponential Cooling Protocol"
            gui="RADIOBUTTONS"
            default="L"
        >
            <Value name="L" />
            <Value name="S" />
            <Value name="E" />
        </Option>
        <Option
            name="Time Step"
            description="Time Step Length in Femtoseconds"
            gui="TEXTFIELD"
            default="1.0"
        />
        <Option
            name="Dumps"
            description="Time Between Dumps in Picoseconds"
            gui="TEXTFIELD"
            default="0.1"
        />
        <Option
            name="Atomic Weight"
            description="Increase Atomic Weights by a Factor of 10^x"
            gui="TEXTFIELD"
            default="0.0"
        />
    </Command>
    <Command
        name="Archive"
        fileType="XYZ INT ARC"
        action="NONE"
        description="A program for concatenating TINKER cycle files into a single archive file; useful for storing
 the intermediate results of minimizations, dynamics trajectories, and so on. The archive file
 can be written in TINKER format, or in formats usable with MSI’s InsightII (their CAR file
 with .msi extension) or with XMakemol (their file format with .xmol extension). Only active
 atoms are written into the InsightII and XMakemol output files, allowing display of partial
 structures. The program can also extract individual cycle files from a TINKER archive."
    >
        <Option
            name="Action"
            description="Create (C) or Extract (E) from an Archive"
            gui="RADIOBUTTONS"
            default="C"
        >
            <Value name="C" />
            <Value name="E" />
        </Option>
        <Option
            name="Format"
            description="Use TINKER (T), XMol XYZ (X) or InsightII (I)"
            gui="RADIOBUTTONS"
            default="T"
        >
            <Value name="T" />
            <Value name="X" />
            <Value name="I" />
        </Option>
        <Option
            name="File Numbers"
            description="Numbers of First and Last File and Step Increment"
            gui="TEXTFIELD"
            default="1 100 1"
        />
    </Command>
    <Command
        name="Diffuse"
        fileType="ARC"
        action="SHOWLOG"
        description="A program to compute the self-diffusion constant for a homogeneous liquid via the Einstein
 equation. A previously saved dynamics trajectory is read in and ‘‘unfolded’’ to reverse
 translation of molecules due to use of periodic boundary conditions. The average motion over
 all molecules is then used to compute the self-diffusion constant. While the current program
 assumes a homogeneous system, it should be easy to modify the code to handle diffusion of
 individual molecules or other desired effects."
    >
        <Option
            name="Files"
            description="Numbers of the First and Last Frame and Step Increment"
            gui="TEXTFIELD"
            default="1 100 1"
        />
        <Option
            name="Time Increment"
            description="Time Inrement in Picoseconds"
            gui="TEXTFIELD"
            default="1.0"
        />
        <Option
            name="Unit Cell"
            description="Unit Cell Axis Lengths"
            gui="TEXTFIELD"
        />
    </Command>
    <Command
        name="Dynamic"
        fileType="XYZ"
        action="CONNECT"
        description="Performs a molecular dynamics (MD) or stochastic dynamics (SD) computation. Starts either
 from a specified input molecular structure (an .xyz file) or from a structure-velocityacceleration
 set saved from a previous dynamics trajectory (a restart from a .dyn file). MD
 trajectories are propagated using either a modified Beeman or a velocity Verlet integration
 method. SD is implemented via our own derivation of a velocity Verlet-based algorithm. In
 addition the program can perform full crystal calculations, and can operate in constant
 energy mode or with maintenance of a desired temperature and/or pressure using the
 Groningen method of coupling to external baths. The user must input the desired number of
 dynamics steps, a time interval for the dynamics steps, and an interval between
 coordinate/trajectory saves. Coordinate sets along the trajectory can be saved as sequentially
 numbered cycle files or directly to a TINKER archive .arc file. At the same time that a point
 along the trajectory is saved, the complete information needed to restart the trajectory from
 that point is updated and stored in the .dyn file."
    >
        <Option
            name="Number of Steps"
            description="Number of Dynamic Steps to be taken"
            gui="TEXTFIELD"
            default="10000"
        />
        <Option
            name="Time Step"
            description="Time Step Length in Femtoseconds "
            gui="TEXTFIELD"
            default="1.0"
        />
        <Option
            name="Dump"
            description="Time between Dumps in Picoseconds "
            gui="TEXTFIELD"
            default="0.1"
        />
        <Option
            name="Ensemble"
            description="Ensemble used for periodic boundry conditions&#10;
 (1) Microcanonical        (NVE)&#10;
 (2) Canonical             (NVT)&#10;
 (3) Isoenthalpic-Isobaric (NPE)&#10;
 (4) Isothermal-Isobaric   (NPT)"
            gui="RADIOBUTTONS"
            default="2"
        >
            <Value name="1" />
            <Value name="2" />
            <Value name="3" />
            <Value name="4" />
            <Conditional
                name="KEYWORD"
                value="A-AXIS B-AXIS C-AXIS"
            />
        </Option>
        <Option
            name="Temperature"
            description="Desired Temperature in Degrees Kelvin "
            gui="TEXTFIELD"
            default="300"
        />
        <Option
            name="Pressure"
            description="Desired Pressure in Atmospheres"
            gui="TEXTFIELD"
            default="1"
        >
            <Conditional
                name="OPTION - ENSEMBLE"
                value="3 4"
            />
        </Option>
    </Command>
    <Command
        name="INTXYZ"
        fileType="INT"
        action="LOADXYZ"
        description="A program to convert a TINKER .int internal coordinates formatted file into a TINKER
.xyz Cartesian coordinates formatted file."
    />
    <Command
        name="Minimize"
        fileType="XYZ"
        action="CONNECT LOADXYZ"
        description="The MINIMIZE program performs a limited memory L-BFGS minimization of an input
 structure over Cartesian coordinates using a modified version of the algorithm of Jorge
 Nocedal. The method requires only the potential energy and gradient at each step along the
 minimization pathway. It requires storage space proportional to the number of atoms in the
 structure. The MINIMIZE procedure is recommended for preliminary minimization of trial
 structures to an rms gradient of 1.0 to 0.1 kcal/mole/Å. It has a relatively fast cycle time and
 is tolerant of poor initial structures, but converges in a slow, linear fashion near the
 minimum. The user supplies the name of the TINKER .xyz coordinates file and a target rms
 gradient value at which the minimization will terminate. Output consists of minimization
 statistics written to the screen or redirected to an output file, and the new coordinates
 written to updated .xyz files or to cycle files."
    >
        <Option
            name="Convergence Criteria"
            description="RMS Gradient per Atom Criterion"
            gui="TEXTFIELD"
            default="0.01"
        />
    </Command>
    <Command
        name="Minrigid"
        fileType="XYZ"
        action="CONNECT LOADXYZ"
        description="The MINRIGID program is similar to MINIMIZE except that it operates on rigid bodies
 starting from a TINKER .xyz coordinate file and the rigid body group definitions found in
 the corresponding .key file. Output is saved in an updated .xyz file or in cycle files."
    >
        <Option
            name="Convergence Criteria"
            description="RMS Gradient per Rigid Body Criterion"
            gui="TEXTFIELD"
            default="0.01"
        />
    </Command>
    <Command
        name="Minirot"
        fileType="INT"
        action="CONNECT LOADINT"
        description="The MINIROT program uses the same limited memory L-BFGS method as MINIMIZE, but performs the
 computation in terms of dihedral angles instead of Cartesian coordinates. Output is saved in an updated .int
 file or in cycle files."
    >
        <Option
            name="Selection of Torsion Angles"
            description=" Selection of Torsional Angles for Rotation :&#10;
&#10;
    0  - Automatic Selection of Torsional Angles&#10;
    1  - Manual Selection of Angles to Rotate&#10;
    2  - Manual Selection of Angles to Freeze&#10;
&#10;"
            gui="RADIOBUTTONS"
            default="0"
        >
            <Value name="0" />
            <Value name="1" />
            <Value name="2" />
            <Conditional
                name="VALUE"
                value="1 2"
                description="Enter Atoms in Rotatable Bond(s)"
                gui="TERMINATEDTEXTFIELD"
                postProcess="ATOMPAIRS"
            />
        </Option>
        <Option
            name="Convergence Criteria"
            description="Enter RMS Gradient per Torsion Criterion:"
            gui="TEXTFIELD"
            default="0.01"
        />
    </Command>
    <Command
        name="Monte"
        fileType="XYZ"
        action="CONNECT LOADXYZ"
        description="The MONTE program implements the Monte Carlo Minimization algorithm developed by
 Harold Scheraga’s group and others. The procedure takes Monte Carlo steps for either a
 single atom or a single torsional angle, then performs a minimization before application of
 the Metropolis sampling method. This results in effective sampling of a modified potential
 surface where the only possible energy levels are those of local minima on the original
 surface. The program can be easily modified to elaborate on the available move set."
    >
        <Option
            name="Steps"
            description="Number of Monte Carlo Steps"
            gui="TEXTFIELD"
            default="1000"
        />
        <Option
            name="Move"
            description="Use Cartesian (C) or Torsional (T 0) Moves"
            gui="RADIOBUTTONS"
            default="S"
        >
            <Value name="S" />
            <Value name="T 0" />
        </Option>
        <Option
            name="Step Size"
            description="Maximum Step in Angstroms (Cartesian) or Degrees (Torsional)"
            gui="TEXTFIELD"
            default="3.0"
        />
        <Option
            name="Temperature"
            description="Temperature in Degrees Kelvin"
            gui="TEXTFIELD"
            default="298"
        />
        <Option
            name="RMSG"
            description="RMS Gradient Criterion"
            gui="TEXTFIELD"
            default="0.01"
        />
    </Command>
    <Command
        name="Newton"
        fileType="XYZ"
        action="CONNECT LOADXYZ"
        description="A truncated Newton minimization method which requires potential energy, gradient and
 Hessian information. This procedure has significant advantages over standard Newton
 methods, and is able to minimize very large structures completely. Several options are
 provided with respect to minimization method and preconditioning of the Newton equations.
 The default options are recommended unless the user is familiar with the math involved.
 This program operates in Cartesian coordinate space and is fairly tolerant of poor input
 structures. Typical algorithm iteration times are longer than with nonlinear conjugate
 gradient or variable metric methods, but many fewer iterations are required for complete
 minimization. NEWTON is usually the best choice for minimizations to the 0.01 to 0.000001
 kcal/mole/Å level of rms gradient convergence. Tests for directions of negative curvature can
 be removed, allowing NEWTON to be used for optimization to conformational transition
 state structures (this only works if the starting point is very close to the transition state).
 Input consists of a TINKER .xyz coordinates file; output is an updated set of minimized
 coordinates and minimization statistics."
    >
        <Option
            name="Method"
            description="Automatic (A), Newton (N), TNCG (T) or DTNCG (D) Method"
            gui="RADIOBUTTONS"
            default="A"
        >
            <Value name="A" />
            <Value name="N" />
            <Value name="T" />
            <Value name="D" />
        </Option>
        <Option
            name="Precondition"
            description="Precondition via Auto (A), None (N), Diag (D), Block (B), SSOR (S), or ICCG (I) "
            gui="RADIOBUTTONS"
            default="A"
        >
            <Value name="A" />
            <Value name="N" />
            <Value name="D" />
            <Value name="B" />
            <Value name="S" />
            <Value name="I" />
        </Option>
        <Option
            name="RMS Gradient"
            description="RMS Gradient per Atom Criterion"
            gui="TEXTFIELD"
            default="0.01"
        />
    </Command>
    <Command
        name="Newtrot"
        fileType="INT"
        action="CONNECT LOADINT"
        description="The NEWTROT program is similar to NEWTON except that it requires a .int file as input and then
 operates in terms of dihedral angles as the minimization variables. Since the dihedral space Hessian matrix
 of an arbitrary structure is often indefinite, this method will often not perform as well as the other, simpler
 dihedral angle based minimizers."
    >
        <Option
            name="Selection of Torsion Angles"
            description=" Selection of Torsional Angles for Rotation :&#10;
&#10;
    0  - Automatic Selection of Torsional Angles&#10;
    1  - Manual Selection of Angles to Rotate&#10;
    2  - Manual Selection of Angles to Freeze&#10;
&#10;"
            gui="RADIOBUTTONS"
            default="0"
        >
            <Value name="0" />
            <Value name="1" />
            <Value name="2" />
            <Conditional
                name="VALUE"
                value="1 2"
                description="Enter Atoms in Rotatable Bond(s)"
                gui="TERMINATEDTEXTFIELD"
                postProcess="ATOMPAIRS"
            />
        </Option>
        <Option
            name="Method"
            description="Automatic (A), Newton (N), TNCG (T) or DTNCG (D) Method"
            gui="RADIOBUTTONS"
            default="A"
        >
            <Value name="A" />
            <Value name="N" />
            <Value name="T" />
            <Value name="D" />
        </Option>
        <Option
            name="Precondition"
            description="Precondition via Auto (A), None (N), Diag (D), Block (B), SSOR (S), or ICCG (I) "
            gui="RADIOBUTTONS"
            default="A"
        >
            <Value name="A" />
            <Value name="N" />
            <Value name="D" />
            <Value name="B" />
            <Value name="S" />
            <Value name="I" />
        </Option>
        <Option
            name="RMS Gradient"
            description="RMS Gradient per Atom Criterion"
            gui="TEXTFIELD"
            default="0.01"
        />
    </Command>
    <Command
        name="Nucleic"
        description="A program for automated building of nucleic acid structures. Upon input of a
 nucleotide sequence with optional phosphate backbone angles, the program builds internal and
 Cartesian coordinates. Standard bond lengths and angles are used. Both DNA and RNA sequences are
 supported as are A-, B- and Z-form structures. Double helixes of complementary sequence can be
 automatically constructed via a rigid docking of individual strands."
        fileType="ANY"
        action="LOADXYZ"
    >
        <Option
            name="File Name"
            description="Specify name to be used for output files"
            gui="TEXTFIELD"
            default="nucleic"
        />
        <Option
            name="Title"
            description="Enter title"
            gui="TEXTFIELD"
            default="Nucleic Acid built with TINKER/Force Field Xplorer"
        />
        <Option
            name="Helix Type"
            description="A-, B- or Z-Form Helix for the Structure"
            gui="RADIOBUTTONS"
            default="B"
        >
            <Value name="A" />
            <Value name="B" />
            <Value name="Z" />
        </Option>
        <Option
            name="Sequence"
            description="One Nucleotide per entry is specified, 5' to 3'. Each 3 letter code may be
 followed by backbone torsions (6F) and a glycosidic torsion (1F). Choosing MOL begins a new strand."
            gui="NUCLEIC"
        />
        <Option
            name="Double Helix"
            description="Build a Double Helix using Complimentary Bases"
            gui="RADIOBUTTONS"
            default="N"
        >
            <Value name="Y" />
            <Value name="N" />
        </Option>
    </Command>
    <Command
        name="Optimize"
        fileType="XYZ"
        action="CONNECT LOADXYZ"
        description="The OPTIMIZE program performs a optimally conditioned variable metric minimization of
 an input structure over Cartesian coordinates using an algorithm due to William Davidon.
 The method does not perform line searches, but requires computation of energies and
 gradients as well as storage for an estimate of the inverse Hessian matrix. The program
 operates on Cartesian coordinates from a TINKER .xyz file. OPTIMIZE will typically
 converge somewhat faster and more completely than MINIMIZE. However, the need to store
 and manipulate a full inverse Hessian estimate limits its use to structures containing less
 than a few hundred atoms on workstation class machines. As with the other minimizers,
 OPTIMIZE needs input coordinates and an rms gradient cutoff criterion. The output
 coordinates are saved in updated .xyz files or as cycle files."
    >
        <Option
            name="Convergence Criteria"
            description="RMS Gradient per Atom Criterion"
            gui="TEXTFIELD"
            default="0.01"
        />
    </Command>
    <Command
        name="Optrigid"
        fileType="XYZ"
        action="CONNECT LOADXYZ"
        description="The OPTRIGID program is similar to OPTIMIZE except that it operates on rigid bodies
 starting from a TINKER .xyz coordinate file and the rigid body atom group definitions
 found in the corresponding .key file. Output is saved in an updated .xyz file or in cycle
 files."
    >
        <Option
            name="Convergence Criteria"
            description="RMS Gradient per Rigid Body Criterion"
            gui="TEXTFIELD"
            default="0.01"
        />
    </Command>
    <Command
        name="Optirot"
        fileType="INT"
        action="CONNECT LOADINT"
        description="The OPTIROT program is similar to OPTIMIZE except that it operates on dihedral angles starting from a
 TINKER .int internal coordinate file. This program is usually the preferred method for most dihedral angle
 optimization problems since Truncated Newton methods appear, in our hands, to lose some of their efficacy
 in moving from Cartesian to torsional coordinate."
    >
        <Option
            name="Selection of Torsion Angles"
            description=" Selection of Torsional Angles for Rotation :&#10;
&#10;
    0  - Automatic Selection of Torsional Angles&#10;
    1  - Manual Selection of Angles to Rotate&#10;
    2  - Manual Selection of Angles to Freeze&#10;
&#10;"
            gui="RADIOBUTTONS"
            default="0"
        >
            <Value name="0" />
            <Value name="1" />
            <Value name="2" />
            <Conditional
                name="VALUE"
                value="1 2"
                description="Enter Atoms in Rotatable Bond(s)"
                gui="TERMINATEDTEXTFIELD"
                postProcess="ATOMPAIRS"
            />
        </Option>
        <Option
            name="Convergence Criteria"
            description="Enter RMS Gradient per Torsion Criterion:"
            gui="TEXTFIELD"
            default="0.01"
        />
    </Command>
    <Command
        name="Path"
        fileType="XYZ"
        action="CONNECT"
        description="A program that implements a variant of Elber’s Lagrangian multiplier-based reaction path
 following algorithm. The program takes as input a pair of structural minima as TINKER
 .xyz files, and then generates a user specified number of points along a path through
 conformational space connecting the input structures. The intermediate structures are
 output as TINKER cycle files, and the higher energy intermediates can be used as input to a
 Newton-based optimization to locate conformational transition states."
    >
        <Option
            name="Structure"
            description="Second structural minima"
            gui="SYSTEMS"
            default="XYZ"
        />
        <Option
            name="Reaction Points"
            description="Number of reaction points to generate"
            gui="TEXTFIELD"
            default="9"
        />
        <Option
            name="Convergence Criteria"
            description="Enter the RMS Gradient per Atom Criterion"
            gui="TEXTFIELD"
            default="0.1"
        />
    </Command>
    <Command
        name="PDBXYZ"
        fileType="PDB"
        action="LOADXYZ"
        description="A program for converting a Brookhaven Protein Data Bank file (a PDB file) into a TINKER .xyz Cartesian
 coordinate file. If the PDB file contains only protein/peptide amino acid residues, then standard protein
 connectivity is assumed, and transferred to the .xyz file. For non-protein portions of the PDB file, atom
 connectivity is determined by the program based on interatomic distances. The program also has the ability
 to add or remove hydrogen atoms from a protein as required by the force field specified during the
 computation."
    >
        <Option
            name="Alternate Location"
            description="Enter a Set of Alternate Atom Locations: "
            gui="RADIOBUTTONS"
        >
            <Conditional
                name="REFLECTION"
                value="AltLoc"
                description="Specify which Alternate Locaton to use "
            />
        </Option>
        <Option
            name="Chain Names"
            description="Enter the Chain Name(s) to Inlcude: "
            gui="RADIOBUTTONS"
            default="ALL"
        >
            <Value name="ALL" />
            <Conditional
                name="REFLECTION"
                value="Chains"
                description="Specify which Chain(s) to use"
            />
        </Option>
    </Command>
    <Command
        name="Protein"
        description="A program for automated building of peptide and protein structures.
 Upon input of an amino acid sequence with optional phi/psi/omega/chi angles, D/L chirality,
 etc., the program builds internal and Cartesian coordinates. Standard bond lengths and angles are
 assumed for the peptide. The program will optionally convert the structure to a cyclic peptide, or
 add either or both N- and C-terminal capping groups. Atom type numbers are automatically assigned
 for the specified force field. The final coordinates and a sequence file are produced as the output."
        fileType="ANY"
        action="LOADXYZ"
    >
        <Option
            name="File Name"
            description="Enter name to be used for output file"
            gui="TEXTFIELD"
            default="protein"
        />
        <Option
            name="Title"
            description="Enter title"
            gui="TEXTFIELD"
            default="Protein built with TINKER/Force Field Xplorer"
        />
        <Option
            name="N-CAP"
            description="The allowed N-Cap Residues are Acetyl=ACE or Formyl=FOR"
            gui="RADIOBUTTONS"
            default="ACE"
        >
            <Value name="ACE" />
            <Value name="FOR" />
            <Value name="NONE" />
        </Option>
        <Option
            name="Sequence"
            description="3 Letter Code, Phi/Psi/Omega (3F), Chi Angles (4F),
 Disulfide Partner if a CYS (I), and D/L Chirality as desired (A1)"
            gui="PROTEIN"
        />
        <Option
            name="C-CAP"
            description="Possible C-Cap Residues are N-MethylAmide=NME or Amide=NH2"
            gui="RADIOBUTTONS"
            default="NH2"
        >
            <Value name="NME" />
            <Value name="NH2" />
            <Value name="NONE" />
        </Option>
        <Option
            name="Cyclize"
            description="Cyclize the Polypeptide Chain"
            gui="RADIOBUTTONS"
            default="N"
        >
            <Value name="Y" />
            <Value name="N" />
        </Option>
    </Command>
    <Command
        name="PSS"
        fileType="XYZ"
        action="CONNECT"
        description="Implements our version of a potential smoothing and search algorithm for the global
 optimization of molecular conformation. An initial structure in .xyz format is first
 minimized in Cartesian coordinates on a series of increasingly smoothed potential energy
 surfaces. Then the smoothing procedure is reversed with minimization on each successive
 surface starting from the coordinates of the minimum on the previous surface. A local search
 procedure is used during the backtracking to explore for alternative minima better than the
 one found during the current minimization. The final result is usually a very low energy
 conformation or, in favorable cases, the global energy minimum conformation. The minimum
 energy coordinate sets found on each surface during both the forward smoothing and
 backtracking procedures are placed in sequentially numbered cycle files."
    >
        <Option
            name="Steps"
            description="Number of Steps for Smoothing Schedule "
            gui="TEXTFIELD"
            default="100"
        />
        <Option
            name="Forward Smoothing"
            description="Perform Forward Smoothing from Input Structure"
            gui="RADIOBUTTONS"
            default="Y"
        >
            <Value name="Y" />
            <Value name="N" />
        </Option>
        <Option
            name="Schedule"
            description="Use Quadratic (Q), Cubic (C) or Sigmoidal (S) Schedule:"
            gui="RADIOBUTTONS"
            default="Q"
        >
            <Value name="Q" />
            <Value name="C" />
            <Value name="S" />
        </Option>
        <Option
            name="Search Type"
            description="Local Search Type - available only from the command line"
            gui="RADIOBUTTONS"
            default="N"
        >
            <Value name="N" />
        </Option>
        <Option
            name="RMS Gradient"
            description="RMS Gradient per Atom Criterion"
            gui="TEXTFIELD"
            default="0.0001"
        />
    </Command>
    <Command
        name="PSSRigid"
        fileType="XYZ"
        action="CONNECT"
        description="This program implements the potential smoothing and search method as described above for
 the PSS program, but performs the computation in terms of keyfile-defined rigid body atom
 groups instead of Cartesian coordinates. Output is saved in numbered cycle files with the
 .xyz file format."
    >
        <Option
            name="Smoothing Parameter"
            description="Potential Surface Smoothing Parameter"
            gui="TEXTFIELD"
            default="0.0"
        />
        <Option
            name="Steps"
            description="Number of Steps for the PSS Schedule"
            gui="TEXTFIELD"
            default="100"
        />
        <Option
            name="Local Search"
            description="Use Local Search to Explore Each Smoothing Level"
            gui="RADIOBUTTONS"
            default="N"
        >
            <Value name="Y" />
            <Value name="N" />
        </Option>
        <Option
            name="RMS Gradient"
            description="RMS Gradient per Atom Rigid Body Criterion"
            gui="TEXTFIELD"
            default="0.0001"
        />
    </Command>
    <Command
        name="Polarize"
        fileType="XYZ"
        action="SHOWLOG"
        description="A program for computing molecular polarizability from an atom-based distributed model of
 polarizability. A damped interaction model due to Thole is optionally via keyfile settings. A
 TINKER .xyz file is required as input. The output consists of the overall polarizability
 tensor in the global coordinates and its eigenvalues."
    />
    <Command
        name="Saddle"
        fileType="XYZ"
        action="CONNECT"
        description="A program for the location of a conformational transition state between two potential energy
 minima. SADDLE uses a conglomeration of ideas from the Bell-Crighton quadratic path and
 the Halgren-Lipscomb synchronous transit methods. The basic idea is to perform a nonlinear
 conjugate gradient optimization in a subspace orthogonal to a suitably defined reaction
 coordinate. The program requires as input the coordinates (TINKER .xyz files) of the two
 minima and an rms gradient convergence criterion for the optimization. The current
 estimate of the transition state structure is written to the file TSTATE.XYZ. Crude
 transition state structures generated by SADDLE can sometimes be refined using the
 NEWTON program. Optionally, a scan of the interconversion pathway can be made at each
 major iteration."
    >
        <Option
            name="Second Structure"
            description="Second structural minima"
            gui="SYSTEMS"
        />
        <Option
            name="RMS Gradient"
            description="Enter RMS Gradient per Atom Criterion"
            gui="TEXTFIELD"
            default="0.1"
        />
        <Option
            name="Synchronous"
            description="Perform Synchronous Transit Pathway Scans"
            gui="RADIOBUTTONS"
            default="N"
        >
            <Value name="N" />
            <Value name="Y" />
        </Option>
    </Command>
    <Command
        name="Scan"
        fileType="XYZ"
        action="CONNECT"
        description="A program for general conformational search of an entire potential energy surface via a basin
 hopping method. The program takes as input a TINKER .xyz coordinates file which is then
 minimized to find the first local minimum for a search list. A series of activations along
 various normal modes from this initial minimum are used as seed points for additional
 minimizations. Whenever a previously unknown local minimum is located it is added to the
 search list. When all minima on the search list have been subjected to the normal mode
 activation without locating additional new minima, the program terminates. The individual
 local minima are written to cycle files as they are discovered. While the SCAN program can
 be used on standard undeformed potential energy surfaces, we have found it to be most
 useful for quickly ‘‘scanning’’ a smoothed energy surface to enumerate the major basins of
 attraction spaning the entire surface."
    >
        <Option
            name="Rotation"
            description="Selection of torsional angles for rotation"
            gui="RADIOBUTTONS"
            default="0"
        >
            <Value name="0" />
            <Value name="1" />
            <Value name="2" />
            <Conditional
                name="VALUE"
                value="1 2"
                description="Enter Atoms in Rotatable Bond(s)"
                gui="TERMINATEDTEXTFIELD"
                postProcess="ATOMPAIRS"
            />
        </Option>
        <Option
            name="Search Directions"
            description="Number Search Directions for Local Search"
            gui="TEXTFIELD"
            default="5"
        />
        <Option
            name="Threshold"
            description="Energy Threshold for Local Minima"
            gui="TEXTFIELD"
            default="100"
        />
        <Option
            name="RMS Gradient"
            description="RMS Gradient per Atom Criterion"
            gui="TEXTFIELD"
            default="0.0001"
        />
    </Command>
    <Command
        name="Sniffer"
        fileType="XYZ"
        action="CONNECT"
        description="A program that implements the Sniffer global optimization algorithm of Butler and
 Slaminka, a discrete version of Griewank’s global search trajectory method. The program
 takes an input TINKER .xyz coordinates file and shakes it vigorously via a modified
 dynamics trajectory before, hopefully, settling into a low lying minimum. Some trial and
 error is often required as the current implementation is sensitive to various parameters and
 tolerances that govern the computation. At present, these parameters are not user accessible,
 and must be altered in the source code. However, this method can do a good job of quickly
 optimizing conformation within a limited range of convergence."
    >
        <Option
            name="Steps"
            description="Number of Steps in the Initial Set"
            gui="TEXTFIELD"
            default="100"
        />
        <Option
            name="Target Energy"
            description="Target Energy for the Global Minimum"
            gui="TEXTFIELD"
            default="0.0"
        />
        <Option
            name="RMS Gradient"
            description="RMS Gradient per Atom Criterion"
            gui="TEXTFIELD"
            default="1.0"
        />
    </Command>
    <Command
        name="Spacefill"
        fileType="XYZ"
        action="SHOWLOG"
        description="A program to compute the volume and surface areas of molecules. Using a modified version
 of Connolly’s original analytical description of the molecular surface, the program determines
 either the van der Waals, accessible or molecular (contact/reentrant) volume and surface
 area. Both surface area and volume are broken down into their geometric components, and
 surface area is decomposed into the convex contribution for each individual atom. The probe
 radius is input as a user option, and atomic radii can be set via the keyword file. If TINKER
 archive files are used as input, the program will compute the volume and surface area of
 each structure in the input file."
    >
        <Option
            name="Type of Area and Volume"
            description=" Three Types of Area and Volume can be Computed :&#10;
    (1) Van der Waals Area and Volume&#10;
    (2) Accessible Area and Excluded Volume&#10;
    (3) Contact-Reentrant Area and Volume&#10;"
            gui="RADIOBUTTONS"
            default="1"
        >
            <Value name="1" />
            <Value name="2" />
            <Value name="3" />
        </Option>
        <Option
            name="Probe Radius"
            description="Probe Radius in Angstroms (Leave blank for van der Waals Area and Volume)"
            gui="TEXTFIELD"
        />
        <Option
            name="Hydrogens"
            description="Include hydrogen atoms in the computation"
            gui="RADIOBUTTONS"
            default="N"
        >
            <Value name="Y" />
            <Value name="N" />
        </Option>
    </Command>
    <Command
        name="Superpose"
        fileType="XYZ"
        action="LOADXYZ"
        description="A program to superimpose two molecular structures in 3-dimensions. A variety of options for
 input of the atom sets to be used during the superposition are presented interactively to the
 user. The superposition can be mass-weighted if desired, and the coordinates of the second
 structure superimposed on the first structure are optionally output. If TINKER archive files
 are used as input, the program will compute all pairwise superpositions between structures
 in the input files."
    >
        <Option
            name="Second Structure"
            description="System to Superpose on the selected structure"
            gui="SYSTEMS"
        />
        <Option
            name="Atom Specification"
            description="Specification of individual atom pairs is only available from the command line"
            gui="RADIOBUTTONS"
            default="1"
            postProcess="APPEND"
        >
            <Value name="1" />
        </Option>
        <Option
            name="First Atom"
            description="First Atom through Last Atom from structure 1 to the corresponding atoms of structure 2."
            gui="TEXTFIELD"
            default="1"
            blank="1"
            lowerLimit="1"
            upperLimit="ATOMS"
            postProcess="APPEND"
        />
        <Option
            name="Last Atom"
            description="Fit First Atom through Last Atom from structure 1 to the corresponding atoms of structure 2."
            gui="TEXTFIELD"
            default="ATOMS"
            blank="ATOMS"
            lowerLimit="1"
            upperLimit="ATOMS"
        />
        <Option
            name="Hydrogens"
            description="Include Hydrogen Atoms in the Fitting"
            gui="RADIOBUTTONS"
            default="Y"
        >
            <Value name="Y" />
            <Value name="N" />
        </Option>
        <Option
            name="Weighting"
            description="Use Mass (M) or Unit (U) Weighted Coordinates"
            gui="RADIOBUTTONS"
            default="U"
        >
            <Value name="M" />
            <Value name="U" />
        </Option>
        <Option
            name="Output"
            description="Write Best-Fit Coordinates of 2nd Molecule"
            gui="RADIOBUTTONS"
            default="N"
        >
            <Value name="Y" />
            <Value name="N" />
        </Option>
        <Option
            name="RMS Cutoff"
            description="Cutoff Value for Listing RMS Deviations"
            gui="TEXTFIELD"
            default="0.0"
            blank="0.0"
            lowerLimit="0.0"
            upperLimit="NONE"
        />
    </Command>
    <Command
        name="Testgrad"
        fileType="XYZ"
        action="SHOWLOG"
        description="The TESTGRAD program computes and compares the analytical and numerical first
 derivatives (i.e., the gradient vector) of the potential energy for a Cartesian coordinate input
 structure. The output can be used to test or debug the current potential or any added user
 defined energy terms."
    >
        <Option
            name="Analytic"
            description="Compute the Analytical Gradient Vector"
            gui="RADIOBUTTONS"
            default="Y"
        >
            <Value name="Y" />
            <Value name="N" />
        </Option>
        <Option
            name="Numerical"
            description="Compute the Numerical Gradient Vector"
            gui="RADIOBUTTONS"
            default="Y"
        >
            <Value name="Y" />
            <Value name="N" />
        </Option>
        <Option
            name="Stepsize"
            description="Enter a Numerical Stepsize in Angstroms"
            gui="TEXTFIELD"
            default="0.1D-04"
        />
        <Option
            name="Output"
            description="Output Breakdown by Gradient Component"
            gui="RADIOBUTTONS"
            default="N"
        >
            <Value name="Y" />
            <Value name="N" />
        </Option>
    </Command>
    <Command
        name="Testhess"
        fileType="XYZ"
        action="SHOWLOG"
        description="The TESTHESS program computes and compares the analytical and numerical second
 derivatives (i.e., the Hessian matrix) of the potential energy for a Cartesian coordinate input
 structure. The output can be used to test or debug the current potential or any added user
 defined energy terms."
    >
        <Option
            name="Analytic"
            description="Compute Analytical Hessian Matrix"
            gui="RADIOBUTTONS"
            default="Y"
        >
            <Value name="Y" />
            <Value name="N" />
        </Option>
        <Option
            name="Numerical"
            description="Compute Numerical Hessian Matrix"
            gui="RADIOBUTTONS"
            default="Y"
        >
            <Value name="Y" />
            <Value name="N" />
        </Option>
        <Option
            name="Method"
            description="Numerical Hessian from Gradient or Function"
            gui="RADIOBUTTONS"
            default="G"
        >
            <Value name="G" />
            <Value name="F" />
        </Option>
        <Option
            name="Stepsize"
            description="Enter a Numerical Stepsize in Angstroms"
            gui="TEXTFIELD"
            default="0.1D-04"
        />
    </Command>
    <Command
        name="Testrot"
        fileType="INT"
        action="SHOWLOG"
        description="The TESTROT program computes and compares the analytical and numerical first derivatives (i.e., the
 gradient vector) of the potential energy with respect to dihedral angles. Input is a TINKER .int internal
 coordinate file. The output can be used to test or debug the current potential functions or any added user
 defined energy terms."
    >
        <Option
            name="Selection of Torsion Angles"
            description=" Selection of Torsional Angles for Rotation :&#10;
&#10;
    0  - Automatic Selection of Torsional Angles&#10;
    1  - Manual Selection of Angles to Rotate&#10;
    2  - Manual Selection of Angles to Freeze&#10;
&#10;"
            gui="RADIOBUTTONS"
            default="0"
        >
            <Value name="0" />
            <Value name="1" />
            <Value name="2" />
            <Conditional
                name="VALUE"
                value="1 2"
                description="Enter Atoms in Rotatable Bond(s)"
                gui="TERMINATEDTEXTFIELD"
                postProcess="ATOMPAIRS"
            />
        </Option>
        <Option
            name="Stepsize"
            description="Enter a Numerical Stepsize in Angstroms"
            gui="TEXTFIELD"
            default="0.1D-04"
        />
    </Command>
    <Command
        name="Timer"
        fileType="XYZ"
        action="SHOWLOG"
        description="A simple program to provide timing statistics for energy function calls within the TINKER
 package. TIMER requires an input .xyz file and outputs the CPU time (wall clock time on
 some machine types) needed to perform a specified number of energy, gradient and Hessian
 evaluations."
    >
        <Option
            name="Repetitions"
            description="Enter Desired Number of Repetitions"
            gui="TEXTFIELD"
            default="1"
        />
        <Option
            name="Hessian"
            description="Include Timing for Hessian Evaluations"
            gui="RADIOBUTTONS"
            default="Y"
        >
            <Value name="Y" />
            <Value name="N" />
        </Option>
    </Command>
    <Command
        name="Timerot"
        fileType="INT"
        action="SHOWLOG"
        description="This program is similar to TIMER, only it operates over dihedral angles via input of a TINKER .int
 internal coordinate file. In the current version, the torsional Hessian is computed numerically from the
 analytical torsional gradient."
    >
        <Option
            name="Selection of Torsion Angles"
            description=" Selection of Torsional Angles for Rotation :&#10;
&#10;
    0  - Automatic Selection of Torsional Angles&#10;
    1  - Manual Selection of Angles to Rotate&#10;
    2  - Manual Selection of Angles to Freeze&#10;
&#10;"
            gui="RADIOBUTTONS"
            default="0"
        >
            <Value name="0" />
            <Value name="1" />
            <Value name="2" />
            <Conditional
                name="VALUE"
                value="1 2"
                description="Enter Atoms in Rotatable Bond(s)"
                gui="TERMINATEDTEXTFIELD"
                postProcess="ATOMPAIRS"
            />
        </Option>
        <Option
            name="Repetitions"
            description="Enter Desired Number of Repetitions"
            gui="TEXTFIELD"
            default="1"
        />
        <Option
            name="Hessian"
            description="Include Timing for Hessian Evaluations"
            gui="RADIOBUTTONS"
            default="Y"
        >
            <Value name="Y" />
            <Value name="N" />
        </Option>
    </Command>
    <Command
        name="Vibrate"
        fileType="XYZ"
        action="SHOWLOG"
        description="A program to perform vibrational analysis by computing and diagonalizing the full Hessian
 matrix (i.e., the second partial derivatives) for an input structure (a TINKER .xyz file).
 Eigenvalues and eigenvectors of the mass weighted Hessian (i.e., the vibrational frequencies
 and normal modes) are also calculated. Structures corresponding to individual normal mode
 motions can be saved in cycle files."
    >
        <Option
            name="Vibration"
            description="Enter the Number(s) of the Vibration(s) to be Output"
            default="7 8 9"
            gui="TEXTFIELD"
            postProcess="SPLIT"
        />
    </Command>
    <Command
        name="Vibrot"
        fileType="INT"
        action="SHOWLOG"
        description="The program VIBROT forms the torsional Hessian matrix via numerical differentiation of the analytical
 torsional gradient. The Hessian is then diagonalized and the eigenvalues are output.
 The present versiondoes not compute the kinetic energy matrix elements needed to convert the
 Hessian into the torsional normal modes; this will be added in a later version. The required
 input is a TINKER .int internal coordinate file."
    >
        <Option
            name="Selection of Torsion Angles"
            description=" Selection of Torsional Angles for Rotation :&#10;
&#10;
    0  - Automatic Selection of Torsional Angles&#10;
    1  - Manual Selection of Angles to Rotate&#10;
    2  - Manual Selection of Angles to Freeze&#10;
&#10;"
            gui="RADIOBUTTONS"
            default="0"
        >
            <Value name="0" />
            <Value name="1" />
            <Value name="2" />
            <Conditional
                name="VALUE"
                value="1 2"
                description="Enter Atoms in Rotatable Bond(s)"
                gui="TERMINATEDTEXTFIELD"
                postProcess="ATOMPAIRS"
            />
        </Option>
    </Command>
    <Command
        name="XYZINT"
        fileType="XYZ"
        action="LOADINT"
        description="A program for converting a TINKER .xyz Cartesian coordinate formatted file into a
 TINKER .int internal coordinates formatted file. This program can optionally use an
 existing internal coordinates file as a template for the connectivity information."
    >
        <Option
            name="Conversion Mode"
            description="Template (T), Dihedrals (D) or Automatic [A]"
            gui="RADIOBUTTONS"
            default="A"
        >
            <Value name="T" />
            <Value name="D" />
            <Value name="A" />
        </Option>
    </Command>
    <Command
        name="XYZPDB"
        fileType="XYZ"
        action="LOADPDB"
        description="A program for converting a TINKER .xyz Cartesian coordinate file into a Brookhaven
 Protein Data Bank file (a PDB file)."
    />
</TinkerCommands>
